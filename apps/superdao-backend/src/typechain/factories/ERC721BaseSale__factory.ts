/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721BaseSale,
  ERC721BaseSaleInterface,
} from "../ERC721BaseSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IKernel",
        name: "kernel",
        type: "address",
      },
    ],
    name: "Init",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "appAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "tierValue",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "saleType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "semver",
        type: "string",
      },
    ],
    name: "OnBuy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "SetActive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "claimLimit",
        type: "uint64",
      },
    ],
    name: "SetClaimLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "tierValues",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tierPrices_",
        type: "uint256[]",
      },
    ],
    name: "SetPaymentPolicy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "code",
        type: "address",
      },
    ],
    name: "Upgrade",
    type: "event",
  },
  {
    inputs: [],
    name: "CONTROLLER",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimLimit",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tierValue",
        type: "bytes32",
      },
    ],
    name: "getLeftClaimsForTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tierValue",
        type: "bytes32",
      },
    ],
    name: "getLeftClaimsForWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract IKernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isActive_",
        type: "bool",
      },
    ],
    name: "setActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "claimLimit_",
        type: "uint64",
      },
    ],
    name: "setClaimLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tierValues",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "tierPrices_",
        type: "uint256[]",
      },
    ],
    name: "setPaymentPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tierValues",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "tierLimits",
        type: "uint256[]",
      },
    ],
    name: "setTierPerWalletLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "totalClaims",
        type: "uint64",
      },
    ],
    name: "setTotalClaimsLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tierPerWalletClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tierPerWalletLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tierPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimsLimit",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appCode",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526064805460ff60b01b191690556200001b62000063565b60ff1660a0523480156200002e57600080fd5b5060405162001303380380620013038339810160408190526200005191620000bf565b6001600160a01b031660805262000136565b606454600090600f600160b01b90910460ff1610620000865762000086620000f1565b60648054600160b01b900460ff16906016620000a28362000107565b91906101000a81548160ff021916908360ff160217905550905090565b600060208284031215620000d257600080fd5b81516001600160a01b0381168114620000ea57600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b600060ff821660ff8114156200012d57634e487b7160e01b600052601160045260246000fd5b60010192915050565b60805160a05161117d62000186600039600081816103550152818161046b015281816108780152818161093401528181610a050152610abb01526000818161021c0152610cce015261117d6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636e13e430116100ad578063c6788bdd11610071578063c6788bdd146102fd578063d4aae0c41461031d578063d54ad2a114610336578063ee0fc12114610350578063fdd487a81461038957600080fd5b80636e13e4301461027f578063acec338a1461029f578063b922854f146102b2578063be610676146102d2578063c0c6d00e146102ea57600080fd5b806340f19677116100f457806340f19677146101c75780634135d7d7146101f9578063572b6c051461020c5780635c60da1b1461024c5780636cd5872d1461026c57600080fd5b80630900f0101461013157806322f3e2d41461014657806323ebfe28146101685780632eb927691461017b5780633520bce01461019c575b600080fd5b61014461013f366004610dfe565b61039c565b005b60c9546101539060ff1681565b60405190151581526020015b60405180910390f35b610144610176366004610e6d565b610469565b61018e610189366004610ed8565b610585565b60405190815260200161015f565b61018e6101aa366004610ef1565b60cc60209081526000928352604080842090915290825290205481565b60c9546101e190600160481b90046001600160401b031681565b6040516001600160401b03909116815260200161015f565b610144610207366004610f1d565b610876565b61015361021a366004610dfe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b610254610919565b6040516001600160a01b03909116815260200161015f565b61014461027a366004610f1d565b610932565b61018e61028d366004610ed8565b60c86020526000908152604090205481565b6101446102ad366004610f54565b610a03565b61018e6102c0366004610ed8565b60cb6020526000908152604090205481565b60c9546101e19061010090046001600160401b031681565b6101446102f8366004610e6d565b610ab9565b61018e61030b366004610dfe565b60ca6020526000908152604090205481565b606454610254906201000090046001600160a01b031681565b60c9546101e190600160881b90046001600160401b031681565b6103777f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161015f565b61018e610397366004610ef1565b610c12565b6064546201000090046001600160a01b03166103b6610cca565b6001600160a01b0316146040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b8152509061040d5760405162461bcd60e51b81526004016104049190610fbe565b60405180910390fd5b5080610417610d14565b80546001600160a01b0319166001600160a01b0392831617905560405190821681527ff78721226efe9a1bb678189a16d1554928b9f2192e2cb93eeda83b79fa40007d9060200160405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000061049381610d47565b6040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b815250906104d75760405162461bcd60e51b81526004016104049190610fbe565b5060408051808201909152600a8152692b20a624a220aa24a7a760b11b60208201528483146105195760405162461bcd60e51b81526004016104049190610fbe565b5060005b80851461057d5783838281811061053657610536610fd1565b9050602002013560cb600088888581811061055357610553610fd1565b905060200201358152602001908152602001600020819055508061057690610ffd565b905061051d565b505050505050565b6064546040516545524337323160d01b60208201526000916000199183916201000090046001600160a01b03169063dae3f63490602601604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016105f091815260200190565b602060405180830381865afa15801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106319190611018565b60c954909150600160481b90046001600160401b0316156106c45760c9546001600160401b03600160881b82048116600160481b9092041611156106ba5760c954600090610698906001600160401b03600160881b8204811691600160481b900416611035565b6001600160401b031690508281106106b057826106b2565b805b9250506106c4565b5060009392505050565b6000816001600160a01b03166390d3786e604051806040016040528060048152602001632a24a2a960e11b815250876040518060400160405280600a81526020016913505617d05353d5539560b21b8152506040518463ffffffff1660e01b81526004016107349392919061105d565b602060405180830381865afa158015610751573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107759190611092565b9050801561086d576000826001600160a01b03166390d3786e604051806040016040528060048152602001632a24a2a960e11b815250886040518060400160405280600c81526020016b1513d5105317d05353d5539560a21b8152506040518463ffffffff1660e01b81526004016107ef9392919061105d565b602060405180830381865afa15801561080c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108309190611092565b90508082111561085f57600061084682846110ab565b90508481106108555784610857565b805b94505061086b565b50600095945050505050565b505b50909392505050565b7f00000000000000000000000000000000000000000000000000000000000000006108a081610d47565b6040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b815250906108e45760405162461bcd60e51b81526004016104049190610fbe565b505060c980546001600160401b03909216600160481b0270ffffffffffffffff00000000000000000019909216919091179055565b6000610923610d14565b546001600160a01b0316919050565b7f000000000000000000000000000000000000000000000000000000000000000061095c81610d47565b6040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b815250906109a05760405162461bcd60e51b81526004016104049190610fbe565b5060c9805468ffffffffffffffff0019166101006001600160401b038581168202929092179283905560405192041681527f335a8b69e4bc3ebd56c1294128e1c5ddedf4a0349dbd56fb3bfc4d6b156deb6d906020015b60405180910390a15050565b7f0000000000000000000000000000000000000000000000000000000000000000610a2d81610d47565b6040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b81525090610a715760405162461bcd60e51b81526004016104049190610fbe565b5060c9805460ff191683151590811790915560405160ff909116151581527f739f22248654acf37bf505bd0621ca0239455fd8f43d16c0491010148ca68f97906020016109f7565b7f0000000000000000000000000000000000000000000000000000000000000000610ae381610d47565b6040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b81525090610b275760405162461bcd60e51b81526004016104049190610fbe565b5060408051808201909152600a8152692b20a624a220aa24a7a760b11b6020820152848314610b695760405162461bcd60e51b81526004016104049190610fbe565b5060005b808514610bcd57838382818110610b8657610b86610fd1565b9050602002013560c86000888885818110610ba357610ba3610fd1565b9050602002013581526020019081526020016000208190555080610bc690610ffd565b9050610b6d565b507fb983419af342763d5a20324a9f5f57c5fced27c5a08d08b398c0f79ee161c06f85858585604051610c0394939291906110f8565b60405180910390a15050505050565b600080610c1e83610585565b600084815260cb60205260409020549091508015610cc2576001600160a01b038516600090815260cc60209081526040808320878452825291829020548251808401909352600b83526a554e415641494c41424c4560a81b918301919091529081831015610c9f5760405162461bcd60e51b81526004016104049190610fbe565b506000610cac82846110ab565b9050838110610cbb5783610cbd565b805b935050505b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331415610d0a575060131936013560601c90565b503390565b905090565b6000610d0f610d4460017f797d7c7d0df25d67e029b044c5bcb2b89d68f6483382b5f85e64485950ed88d16110ab565b90565b6064546000906201000090046001600160a01b031663ed82f4b8610d69610cca565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260ff85166044820152606401602060405180830381865afa158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de0919061112a565b92915050565b6001600160a01b0381168114610dfb57600080fd5b50565b600060208284031215610e1057600080fd5b8135610e1b81610de6565b9392505050565b60008083601f840112610e3457600080fd5b5081356001600160401b03811115610e4b57600080fd5b6020830191508360208260051b8501011115610e6657600080fd5b9250929050565b60008060008060408587031215610e8357600080fd5b84356001600160401b0380821115610e9a57600080fd5b610ea688838901610e22565b90965094506020870135915080821115610ebf57600080fd5b50610ecc87828801610e22565b95989497509550505050565b600060208284031215610eea57600080fd5b5035919050565b60008060408385031215610f0457600080fd5b8235610f0f81610de6565b946020939093013593505050565b600060208284031215610f2f57600080fd5b81356001600160401b0381168114610e1b57600080fd5b8015158114610dfb57600080fd5b600060208284031215610f6657600080fd5b8135610e1b81610f46565b6000815180845260005b81811015610f9757602081850181015186830182015201610f7b565b81811115610fa9576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610e1b6020830184610f71565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561101157611011610fe7565b5060010190565b60006020828403121561102a57600080fd5b8151610e1b81610de6565b60006001600160401b038381169083168181101561105557611055610fe7565b039392505050565b6060815260006110706060830186610f71565b84602084015282810360408401526110888185610f71565b9695505050505050565b6000602082840312156110a457600080fd5b5051919050565b6000828210156110bd576110bd610fe7565b500390565b81835260006001600160fb1b038311156110db57600080fd5b8260051b8083602087013760009401602001938452509192915050565b60408152600061110c6040830186886110c2565b828103602084015261111f8185876110c2565b979650505050505050565b60006020828403121561113c57600080fd5b8151610e1b81610f4656fea2646970667358221220121e18fc2e64c9662fc7fb3c9f7b5649ccdcf5db52881d91d4c143d4089fcc8a64736f6c634300080c0033";

type ERC721BaseSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BaseSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721BaseSale__factory extends ContractFactory {
  constructor(...args: ERC721BaseSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721BaseSale> {
    return super.deploy(
      trustedForwarder,
      overrides || {}
    ) as Promise<ERC721BaseSale>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  attach(address: string): ERC721BaseSale {
    return super.attach(address) as ERC721BaseSale;
  }
  connect(signer: Signer): ERC721BaseSale__factory {
    return super.connect(signer) as ERC721BaseSale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BaseSaleInterface {
    return new utils.Interface(_abi) as ERC721BaseSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721BaseSale {
    return new Contract(address, _abi, signerOrProvider) as ERC721BaseSale;
  }
}
