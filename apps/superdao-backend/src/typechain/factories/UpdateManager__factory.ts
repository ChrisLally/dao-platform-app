/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UpdateManager, UpdateManagerInterface } from "../UpdateManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "app",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "SetAppCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "code",
        type: "address",
      },
    ],
    name: "Upgrade",
    type: "event",
  },
  {
    inputs: [],
    name: "__semver",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "app",
        type: "bytes32",
      },
    ],
    name: "getAppCodeHistory",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "app",
        type: "bytes32",
      },
    ],
    name: "getLastAppCode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kernel",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc721",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc721OpenSale",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc721WhitelistSale",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "app",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "code",
        type: "address",
      },
    ],
    name: "setAppCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appCode",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060016080819052600060a081905260c081905280610c1461004a82396000610484015260006104590152600061042e0152610c146000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637effd8a7116100665780637effd8a71461010b5780638da5cb5b146101205780639499138e14610131578063ba11e6e614610151578063f2fde38b1461016457600080fd5b80630900f010146100a35780631459457a146100b85780635c60da1b146100cb5780635e4a8a20146100f0578063715018a614610103575b600080fd5b6100b66100b1366004610941565b610177565b005b6100b66100c636600461095c565b610205565b6100d36103a0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100fe3660046109c1565b6103b9565b6100b66103f1565b610113610427565b6040516100e791906109ed565b6097546001600160a01b03166100d3565b61014461013f366004610a42565b610509565b6040516100e79190610a5b565b6100d361015f366004610a42565b610529565b6100b6610172366004610941565b610565565b6097546001600160a01b031633146101aa5760405162461bcd60e51b81526004016101a190610aa8565b60405180910390fd5b806101b3610600565b80546001600160a01b0319166001600160a01b0392831617905560405190821681527ff78721226efe9a1bb678189a16d1554928b9f2192e2cb93eeda83b79fa40007d9060200160405180910390a150565b60006102116001610638565b90508015610229576064805461ff0019166101001790555b6102316106c7565b6040516512d15493915360d21b60208201526102669060260160405160208183030381529060405280519060200120876106f6565b6040516420a226a4a760d91b602082015261029a9060250160405160208183030381529060405280519060200120866106f6565b6040516545524337323160d01b60208201526102cf9060260160405160208183030381529060405280519060200120856106f6565b6040516f4552433732315f4f50454e5f53414c4560801b602082015261030e9060300160405160208183030381529060405280519060200120846106f6565b604051744552433732315f57484954454c4953545f53414c4560581b60208201526103529060350160405160208183030381529060405280519060200120836106f6565b8015610398576064805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60006103aa610600565b546001600160a01b0316919050565b6097546001600160a01b031633146103e35760405162461bcd60e51b81526004016101a190610aa8565b6103ed82826106f6565b5050565b6097546001600160a01b0316331461041b5760405162461bcd60e51b81526004016101a190610aa8565b6104256000610794565b565b60606104547f00000000000000000000000000000000000000000000000000000000000000006030610af3565b61047f7f00000000000000000000000000000000000000000000000000000000000000006030610af3565b6104aa7f00000000000000000000000000000000000000000000000000000000000000006030610af3565b604051603b60f91b60208201526001600160f81b031960f894851b81166021830152601760f91b6022830181905293851b811660238301526024820193909352921b166025820152602601604051602081830303815290604052905090565b600081815260c960205260409020606090610523906107e6565b92915050565b600081815260c96020526040812061052390600190610547906107fa565b6105519190610b18565b600084815260c96020526040902090610804565b6097546001600160a01b0316331461058f5760405162461bcd60e51b81526004016101a190610aa8565b6001600160a01b0381166105f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a1565b6105fd81610794565b50565b600061063361063060017f797d7c7d0df25d67e029b044c5bcb2b89d68f6483382b5f85e64485950ed88d1610b18565b90565b905090565b606454600090610100900460ff1615610681578160ff16600114801561065d5750303b155b6106795760405162461bcd60e51b81526004016101a190610b2f565b506000919050565b60645460ff8084169116106106a85760405162461bcd60e51b81526004016101a190610b2f565b506064805460ff191660ff92909216919091179055600190565b919050565b606454610100900460ff166106ee5760405162461bcd60e51b81526004016101a190610b7d565b610425610810565b600082815260c96020526040902061070e9082610840565b6040518060400160405280600981526020016812539590549250539560ba1b8152509061074e5760405162461bcd60e51b81526004016101a191906109ed565b50604080518381526001600160a01b03831660208201527f7536c7703d321558d15a6f344db59e1721430eeb9885a88b380f91b70bb0b4ee910160405180910390a15050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060006107f383610855565b9392505050565b6000610523825490565b60006107f383836108b1565b606454610100900460ff166108375760405162461bcd60e51b81526004016101a190610b7d565b61042533610794565b60006107f3836001600160a01b0384166108db565b6060816000018054806020026020016040519081016040528092919081815260200182805480156108a557602002820191906000526020600020905b815481526020019060010190808311610891575b50505050509050919050565b60008260000182815481106108c8576108c8610bc8565b9060005260206000200154905092915050565b600081815260018301602052604081205461092257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610523565b506000610523565b80356001600160a01b03811681146106c257600080fd5b60006020828403121561095357600080fd5b6107f38261092a565b600080600080600060a0868803121561097457600080fd5b61097d8661092a565b945061098b6020870161092a565b93506109996040870161092a565b92506109a76060870161092a565b91506109b56080870161092a565b90509295509295909350565b600080604083850312156109d457600080fd5b823591506109e46020840161092a565b90509250929050565b600060208083528351808285015260005b81811015610a1a578581018301518582016040015282016109fe565b81811115610a2c576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610a5457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610a9c5783516001600160a01b031683529284019291840191600101610a77565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115610b1057610b10610add565b019392505050565b600082821015610b2a57610b2a610add565b500390565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a4037e9af41c14fd24726d49651880bad0e1c661de433b7bd685a110ba28b49464736f6c634300080c0033";

type UpdateManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpdateManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpdateManager__factory extends ContractFactory {
  constructor(...args: UpdateManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpdateManager> {
    return super.deploy(overrides || {}) as Promise<UpdateManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpdateManager {
    return super.attach(address) as UpdateManager;
  }
  connect(signer: Signer): UpdateManager__factory {
    return super.connect(signer) as UpdateManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpdateManagerInterface {
    return new utils.Interface(_abi) as UpdateManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpdateManager {
    return new Contract(address, _abi, signerOrProvider) as UpdateManager;
  }
}
