/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721WhitelistClaim,
  ERC721WhitelistClaimInterface,
} from "../ERC721WhitelistClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IKernel",
        name: "kernel",
        type: "address",
      },
    ],
    name: "Init",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "SetActive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "code",
        type: "address",
      },
    ],
    name: "Upgrade",
    type: "event",
  },
  {
    inputs: [],
    name: "CLAIM_LIMIT_ERROR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTROLLER",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__semver",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "tierValue",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimLimitByTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IKernel",
        name: "_kernel",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "tiers",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "claimLimits",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "contract IKernel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleTreeURI",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isActive_",
        type: "bool",
      },
    ],
    name: "setActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleTreeRoot_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "merkleTreeURI_",
        type: "bytes",
      },
    ],
    name: "setMerkleTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appCode",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040526064805460ff60b01b191690556200001c62000074565b60ff1660a0523480156200002f57600080fd5b50604051620014e5380380620014e58339810160408190526200005291620000d0565b6001600160a01b0316608052600160c052600060e05260036101005262000147565b606454600090600f600160b01b90910460ff161062000097576200009762000102565b60648054600160b01b900460ff16906016620000b38362000118565b91906101000a81548160ff021916908360ff160217905550905090565b600060208284031215620000e357600080fd5b81516001600160a01b0381168114620000fb57600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b600060ff821660ff8114156200013e57634e487b7160e01b600052601160045260246000fd5b60010192915050565b60805160a05160c05160e05161010051611344620001a160003960006107fb015260006107d0015260006107a50152600081816102ae0152818161088201526109390152600081816101c101526109ca01526113446000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637effd8a711610097578063c5542d3f11610066578063c5542d3f14610260578063d4aae0c414610290578063ee0fc121146102a9578063f716aee9146102e257600080fd5b80637effd8a714610211578063a3eddaae14610219578063acec338a1461023a578063b00f24cf1461024d57600080fd5b8063518d08d7116100d3578063518d08d71461018b578063539927be1461019e578063572b6c05146101b15780635c60da1b146101f157600080fd5b80630900f010146101055780630afb09e81461011a57806322f3e2d4146101595780634ba8c9f314610176575b600080fd5b610118610113366004610eb0565b6102eb565b005b610146610128366004610ed4565b61012d60209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b60c8546101669060ff1681565b6040519015158152602001610150565b61017e6103b9565b6040516101509190610f5c565b610118610199366004610fbb565b610447565b6101186101ac366004611017565b6106a5565b6101666101bf366004610eb0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6101f9610785565b6040516001600160a01b039091168152602001610150565b61017e61079e565b61014661022736600461109a565b61012c6020526000908152604090205481565b6101186102483660046110c1565b610880565b61011861025b3660046110de565b610937565b61017e6040518060400160405280601181526020017021a620a4a6afa624a6a4aa2fa2a92927a960791b81525081565b6064546101f9906201000090046001600160a01b031681565b6102d07f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610150565b61014660ca5481565b6064546201000090046001600160a01b03166103056109c6565b6001600160a01b0316146040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b8152509061035c5760405162461bcd60e51b81526004016103539190610f5c565b60405180910390fd5b5080610366610a10565b80546001600160a01b0319166001600160a01b0392831617905560405190821681527ff78721226efe9a1bb678189a16d1554928b9f2192e2cb93eeda83b79fa40007d906020015b60405180910390a150565b60c980546103c69061115a565b80601f01602080910402602001604051908101604052809291908181526020018280546103f29061115a565b801561043f5780601f106104145761010080835404028352916020019161043f565b820191906000526020600020905b81548152906001019060200180831161042257829003601f168201915b505050505081565b61044f610a43565b600081815261012c60209081526040808320546001600160a01b038816845261012d8352818420858552909252822080549192909161048d906111ab565b91905081905511156040518060400160405280601181526020017021a620a4a6afa624a6a4aa2fa2a92927a960791b815250906104dd5760405162461bcd60e51b81526004016103539190610f5c565b506000846104ea83610a8b565b6040516020016104fb9291906111c6565b6040516020818303038152906040528051906020012090506105548484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060ca549150849050610b91565b6040518060400160405280600a8152602001692b20a624a220aa24a7a760b11b815250906105955760405162461bcd60e51b81526004016103539190610f5c565b506064546040516545524337323160d01b6020820152620100009091046001600160a01b03169063dae3f63490602601604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016105f991815260200190565b602060405180830381865afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a91906111fe565b604051632cfd300560e01b81526001600160a01b038781166004830152602482018590529190911690632cfd300590604401600060405180830381600087803b15801561068657600080fd5b505af115801561069a573d6000803e3d6000fd5b505050505050505050565b60006106b16001610ba7565b905080156106c9576064805461ff0019166101001790555b6106d286610c31565b60005b808514610736578383828181106106ee576106ee61121b565b9050602002013561012c600088888581811061070c5761070c61121b565b905060200201358152602001908152602001600020819055508061072f906111ab565b90506106d5565b50801561077d576064805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b600061078f610a10565b546001600160a01b0316919050565b60606107cb7f00000000000000000000000000000000000000000000000000000000000000006030611231565b6107f67f00000000000000000000000000000000000000000000000000000000000000006030611231565b6108217f00000000000000000000000000000000000000000000000000000000000000006030611231565b604051603b60f91b60208201526001600160f81b031960f894851b81166021830152601760f91b6022830181905293851b811660238301526024820193909352921b166025820152602601604051602081830303815290604052905090565b7f00000000000000000000000000000000000000000000000000000000000000006108aa81610cf7565b6040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b815250906108ee5760405162461bcd60e51b81526004016103539190610f5c565b5060c8805460ff19168315159081179091556040519081527f739f22248654acf37bf505bd0621ca0239455fd8f43d16c0491010148ca68f979060200160405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000061096181610cf7565b6040518060400160405280600d81526020016c20aaaa2427a924ad20aa24a7a760991b815250906109a55760405162461bcd60e51b81526004016103539190610f5c565b506109ae610a43565b60ca8490556109bf60c98484610e02565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331415610a06575060131936013560601c90565b503390565b905090565b6000610a0b610a4060017f797d7c7d0df25d67e029b044c5bcb2b89d68f6483382b5f85e64485950ed88d1611256565b90565b60c85460408051808201909152600a8152694e4f545f41435449564560b01b60208201529060ff16610a885760405162461bcd60e51b81526004016103539190610f5c565b50565b606060005b60208160ff16108015610ac45750828160ff1660208110610ab357610ab361121b565b1a60f81b6001600160f81b03191615155b15610ad957610ad28161126d565b9050610a90565b60008160ff1667ffffffffffffffff811115610af757610af761128d565b6040519080825280601f01601f191660200182016040528015610b21576020820181803683370190505b50905060005b8260ff168160ff1614610b8957848160ff1660208110610b4957610b4961121b565b1a60f81b828260ff1681518110610b6257610b6261121b565b60200101906001600160f81b031916908160001a905350610b828161126d565b9050610b27565b509392505050565b600082610b9e8584610d96565b14949350505050565b606454600090610100900460ff1615610bf0578160ff166001148015610bcc5750303b155b610be85760405162461bcd60e51b8152600401610353906112a3565b506000919050565b60645460ff808416911610610c175760405162461bcd60e51b8152600401610353906112a3565b506064805460ff191660ff92909216919091179055600190565b606454610100900460ff16610c9c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610353565b6064805462010000600160b01b031916620100006001600160a01b038481168202929092179283905560405192041681527f4f8cfde3439a1a302c21ca51eec26086efbfd940b8c0279889fc6bb6e73ecc66906020016103ae565b6064546000906201000090046001600160a01b031663ed82f4b8610d196109c6565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260ff85166044820152606401602060405180830381865afa158015610d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9091906112f1565b92915050565b600081815b8451811015610b89576000858281518110610db857610db861121b565b60200260200101519050808311610dde5760008381526020829052604090209250610def565b600081815260208490526040902092505b5080610dfa816111ab565b915050610d9b565b828054610e0e9061115a565b90600052602060002090601f016020900481019282610e305760008555610e76565b82601f10610e495782800160ff19823516178555610e76565b82800160010185558215610e76579182015b82811115610e76578235825591602001919060010190610e5b565b50610e82929150610e86565b5090565b5b80821115610e825760008155600101610e87565b6001600160a01b0381168114610a8857600080fd5b600060208284031215610ec257600080fd5b8135610ecd81610e9b565b9392505050565b60008060408385031215610ee757600080fd5b8235610ef281610e9b565b946020939093013593505050565b60005b83811015610f1b578181015183820152602001610f03565b83811115610f2a576000848401525b50505050565b60008151808452610f48816020860160208601610f00565b601f01601f19169290920160200192915050565b602081526000610ecd6020830184610f30565b60008083601f840112610f8157600080fd5b50813567ffffffffffffffff811115610f9957600080fd5b6020830191508360208260051b8501011115610fb457600080fd5b9250929050565b60008060008060608587031215610fd157600080fd5b8435610fdc81610e9b565b9350602085013567ffffffffffffffff811115610ff857600080fd5b61100487828801610f6f565b9598909750949560400135949350505050565b60008060008060006060868803121561102f57600080fd5b853561103a81610e9b565b9450602086013567ffffffffffffffff8082111561105757600080fd5b61106389838a01610f6f565b9096509450604088013591508082111561107c57600080fd5b5061108988828901610f6f565b969995985093965092949392505050565b6000602082840312156110ac57600080fd5b5035919050565b8015158114610a8857600080fd5b6000602082840312156110d357600080fd5b8135610ecd816110b3565b6000806000604084860312156110f357600080fd5b83359250602084013567ffffffffffffffff8082111561111257600080fd5b818601915086601f83011261112657600080fd5b81358181111561113557600080fd5b87602082850101111561114757600080fd5b6020830194508093505050509250925092565b600181811c9082168061116e57607f821691505b6020821081141561118f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156111bf576111bf611195565b5060010190565b6bffffffffffffffffffffffff198360601b168152600082516111f0816014850160208701610f00565b919091016014019392505050565b60006020828403121561121057600080fd5b8151610ecd81610e9b565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff84168060ff0382111561124e5761124e611195565b019392505050565b60008282101561126857611268611195565b500390565b600060ff821660ff81141561128457611284611195565b60010192915050565b634e487b7160e01b600052604160045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006020828403121561130357600080fd5b8151610ecd816110b356fea2646970667358221220e050bd46ccbfbab0206d2936084146e07d7d2dbd2dd7e4e211254b693547986664736f6c634300080c0033";

type ERC721WhitelistClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WhitelistClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721WhitelistClaim__factory extends ContractFactory {
  constructor(...args: ERC721WhitelistClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721WhitelistClaim> {
    return super.deploy(
      trustedForwarder,
      overrides || {}
    ) as Promise<ERC721WhitelistClaim>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  attach(address: string): ERC721WhitelistClaim {
    return super.attach(address) as ERC721WhitelistClaim;
  }
  connect(signer: Signer): ERC721WhitelistClaim__factory {
    return super.connect(signer) as ERC721WhitelistClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WhitelistClaimInterface {
    return new utils.Interface(_abi) as ERC721WhitelistClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721WhitelistClaim {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721WhitelistClaim;
  }
}
