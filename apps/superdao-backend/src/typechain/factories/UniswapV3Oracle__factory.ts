/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV3Oracle,
  UniswapV3OracleInterface,
} from "../UniswapV3Oracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "code",
        type: "address",
      },
    ],
    name: "Upgrade",
    type: "event",
  },
  {
    inputs: [],
    name: "__semver",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenSalePrice",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenBuyPrice",
        type: "address",
      },
    ],
    name: "getTradePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenSalePrice",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenBuyPrice",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "size",
        type: "uint16",
      },
    ],
    name: "increasePoolHistory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "uniswapFactory_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "isInWhitelistTokenAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeTokenWrapperAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "uniswapFactory_",
        type: "address",
      },
    ],
    name: "setFactoryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
    ],
    name: "setTwapInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddress_",
        type: "address[]",
      },
    ],
    name: "setWhitelistTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapFactory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appCode",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelistTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506001608052600060a052600260c05260805160a05160c051611dc461004f600039600061062e01526000610603015260006105d80152611dc46000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806368f78079116100a25780638bdb2afa116100715780638bdb2afa1461024a5780638da5cb5b1461025d578063b32728d11461026e578063c1554a4b14610289578063f2fde38b1461029c57600080fd5b806368f78079146101f7578063715018a61461021a5780637effd8a71461022257806383c17c551461023757600080fd5b80634d0047ee116100e95780634d0047ee1461018757806358beebc0146101a85780635c60da1b146101c95780635dd9ceb1146101d1578063602a70f1146101e457600080fd5b80630900f0101461011b5780631d27050f1461013057806338b42809146101435780633c1d5df014610156575b600080fd5b61012e610129366004611523565b6102af565b005b61012e61013e366004611554565b61033d565b61012e61015136600461157f565b61038d565b60c95461016d90600160a01b900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b61019061101081565b6040516001600160a01b03909116815260200161017e565b6101bb6101b63660046115ca565b6103ff565b60405190815260200161017e565b6101906104b3565b61012e6101df366004611603565b6104cc565b6101906101f2366004611678565b610507565b61020a610205366004611523565b610531565b604051901515815260200161017e565b61012e61059b565b61022a6105d1565b60405161017e9190611691565b61012e610245366004611523565b6106b3565b60c954610190906001600160a01b031681565b6097546001600160a01b0316610190565b610190730d500b1d8e8ef31e21c99d1db9a6444d3adf127081565b61012e6102973660046116e6565b6106ff565b61012e6102aa366004611523565b6107a3565b6097546001600160a01b031633146102e25760405162461bcd60e51b81526004016102d990611724565b60405180910390fd5b806102eb61083e565b80546001600160a01b0319166001600160a01b0392831617905560405190821681527ff78721226efe9a1bb678189a16d1554928b9f2192e2cb93eeda83b79fa40007d9060200160405180910390a150565b6097546001600160a01b031633146103675760405162461bcd60e51b81526004016102d990611724565b60c9805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b60006103998484610876565b6040516332148f6760e01b815261ffff841660048201529091506001600160a01b038216906332148f6790602401600060405180830381600087803b1580156103e157600080fd5b505af11580156103f5573d6000803e3d6000fd5b5050505050505050565b6000816001600160a01b0316836001600160a01b031614156104915761042483610531565b8015610434575061043483610531565b6040518060400160405280600a8152602001692b20a624a220aa24a7a760b11b815250906104755760405162461bcd60e51b81526004016102d99190611691565b5061047f83610a4d565b61048a90600a611853565b90506104ad565b600061049d8484610876565b90506104a98184610ab1565b9150505b92915050565b60006104bd61083e565b546001600160a01b0316919050565b6097546001600160a01b031633146104f65760405162461bcd60e51b81526004016102d990611724565b61050260ca8383611496565b505050565b60ca818154811061051757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000805b60ca5481101561059257826001600160a01b031660ca828154811061055c5761055c611862565b6000918252602090912001546001600160a01b031614156105805750600192915050565b8061058a81611878565b915050610535565b50600092915050565b6097546001600160a01b031633146105c55760405162461bcd60e51b81526004016102d990611724565b6105cf6000610c2f565b565b60606105fe7f00000000000000000000000000000000000000000000000000000000000000006030611893565b6106297f00000000000000000000000000000000000000000000000000000000000000006030611893565b6106547f00000000000000000000000000000000000000000000000000000000000000006030611893565b604051603b60f91b60208201526001600160f81b031960f894851b81166021830152601760f91b6022830181905293851b811660238301526024820193909352921b166025820152602601604051602081830303815290604052905090565b6097546001600160a01b031633146106dd5760405162461bcd60e51b81526004016102d990611724565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b600061070b6001610c81565b90508015610723576064805461ff0019166101001790555b60c9805463ffffffff8516600160a01b026001600160c01b03199091166001600160a01b0387161717905561075782610c2f565b801561079d576064805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6097546001600160a01b031633146107cd5760405162461bcd60e51b81526004016102d990611724565b6001600160a01b0381166108325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d9565b61083b81610c2f565b50565b600061087161086e60017f797d7c7d0df25d67e029b044c5bcb2b89d68f6483382b5f85e64485950ed88d16118b8565b90565b905090565b60008060008060005b600362ffffff821610156109cc5760c9546001600160a01b0316631698ee8288886108ae62ffffff8616610d10565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092991906118cf565b93506001600160a01b03841661093e576109ba565b836001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906118ec565b6001600160801b03169150828211156109ba578192508394505b806109c481611915565b91505061087f565b506001600160a01b038416158015906109ef57506000846001600160a01b03163b115b6040518060400160405280601881526020017f4c49515549444954595f504f4f4c5f4e4f545f464f554e44000000000000000081525090610a435760405162461bcd60e51b81526004016102d99190611691565b5050505092915050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad9190611949565b60c95460009083908290610ad3908390600160a01b900463ffffffff16610d51565b90506000610aef6001600160a01b03831680600160601b610f1e565b90506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5591906118cf565b9050856001600160a01b0316816001600160a01b03161415610c01576000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd591906118cf565b9050826060610be383610a4d565b610bee90600a611853565b610bf992911b61197a565b955050610a43565b606082610c0d83610a4d565b610c1890600a611853565b610c22919061198e565b901c979650505050505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606454600090610100900460ff1615610cca578160ff166001148015610ca65750303b155b610cc25760405162461bcd60e51b81526004016102d9906119ad565b506000919050565b60645460ff808416911610610cf15760405162461bcd60e51b81526004016102d9906119ad565b506064805460ff191660ff92909216919091179055600190565b919050565b60408051606081018252606481526101f46020820152610bb891810191909152600090808360038110610d4557610d45611862565b60200201519392505050565b600063ffffffff8216610dcf57826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc091906119fb565b509495506104ad945050505050565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110610e0457610e04611862565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610e3357610e33611862565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0386169063883bdbfd90610e77908590600401611ab5565b600060405180830381865afa158015610e94573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ebc9190810190611bc8565b509050610f158460030b82600081518110610ed957610ed9611862565b602002602001015183600181518110610ef457610ef4611862565b6020026020010151610f069190611c94565b610f109190611ce4565b611079565b95945050505050565b600080806000198587098587029250828110838203039150508060001415610f585760008411610f4d57600080fd5b508290049050611072565b808411610f6457600080fd5b60008486880960009550859381119092039190506001610f84818461198e565b909317926000610f9587600361198e565b6002189050610fa4818861198e565b610faf9060026118b8565b610fb9908261198e565b9050610fc5818861198e565b610fd09060026118b8565b610fda908261198e565b9050610fe6818861198e565b610ff19060026118b8565b610ffb908261198e565b9050611007818861198e565b6110129060026118b8565b61101c908261198e565b9050611028818861198e565b6110339060026118b8565b61103d908261198e565b9050611049818861198e565b6110549060026118b8565b61105e908261198e565b905061106a818661198e565b955050505050505b9392505050565b60008060008360020b12611090578260020b61109d565b8260020b61109d90611d22565b90506110ac620d89e719611d3f565b60020b8111156110e25760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016102d9565b6000600182166110f657600160801b611108565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611147576080611142826ffff97272373d413259a46990580e213a61198e565b901c90505b600482161561117157608061116c826ffff2e50f5f656932ef12357cf3c7fdcc61198e565b901c90505b600882161561119b576080611196826fffe5caca7e10e4e61c3624eaa0941cd061198e565b901c90505b60108216156111c55760806111c0826fffcb9843d60f6159c9db58835c92664461198e565b901c90505b60208216156111ef5760806111ea826fff973b41fa98c081472e6896dfb254c061198e565b901c90505b6040821615611219576080611214826fff2ea16466c96a3843ec78b326b5286161198e565b901c90505b608082161561124357608061123e826ffe5dee046a99a2a811c461f1969c305361198e565b901c90505b61010082161561126e576080611269826ffcbe86c7900a88aedcffc83b479aa3a461198e565b901c90505b610200821615611299576080611294826ff987a7253ac413176f2b074cf7815e5461198e565b901c90505b6104008216156112c45760806112bf826ff3392b0822b70005940c7a398e4b70f361198e565b901c90505b6108008216156112ef5760806112ea826fe7159475a2c29b7443b29c7fa6e889d961198e565b901c90505b61100082161561131a576080611315826fd097f3bdfd2022b8845ad8f792aa582561198e565b901c90505b612000821615611345576080611340826fa9f746462d870fdf8a65dc1f90e061e561198e565b901c90505b61400082161561137057608061136b826f70d869a156d2a1b890bb3df62baf32f761198e565b901c90505b61800082161561139b576080611396826f31be135f97d08fd981231505542fcfa661198e565b901c90505b620100008216156113c75760806113c2826f09aa508b5b7a84e1c677de54f3e99bc961198e565b901c90505b620200008216156113f25760806113ed826e5d6af8dedb81196699c329225ee60461198e565b901c90505b6204000082161561141c576080611417826d2216e584f5fa1ea926041bedfe9861198e565b901c90505b6208000082161561144457608061143f826b048a170391f7dc42444e8fa261198e565b901c90505b60008460020b131561145f5761145c8160001961197a565b90505b61146e64010000000082611d62565b1561147a57600161147d565b60005b61148e9060ff16602083901c611d76565b949350505050565b8280548282559060005260206000209081019282156114e9579160200282015b828111156114e95781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906114b6565b506114f59291506114f9565b5090565b5b808211156114f557600081556001016114fa565b6001600160a01b038116811461083b57600080fd5b60006020828403121561153557600080fd5b81356110728161150e565b803563ffffffff81168114610d0b57600080fd5b60006020828403121561156657600080fd5b61107282611540565b61ffff8116811461083b57600080fd5b60008060006060848603121561159457600080fd5b833561159f8161150e565b925060208401356115af8161150e565b915060408401356115bf8161156f565b809150509250925092565b600080604083850312156115dd57600080fd5b82356115e88161150e565b915060208301356115f88161150e565b809150509250929050565b6000806020838503121561161657600080fd5b823567ffffffffffffffff8082111561162e57600080fd5b818501915085601f83011261164257600080fd5b81358181111561165157600080fd5b8660208260051b850101111561166657600080fd5b60209290920196919550909350505050565b60006020828403121561168a57600080fd5b5035919050565b600060208083528351808285015260005b818110156116be578581018301518582016040015282016116a2565b818111156116d0576000604083870101525b50601f01601f1916929092016040019392505050565b6000806000606084860312156116fb57600080fd5b83356117068161150e565b925061171460208501611540565b915060408401356115bf8161150e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117aa57816000190482111561179057611790611759565b8085161561179d57918102915b93841c9390800290611774565b509250929050565b6000826117c1575060016104ad565b816117ce575060006104ad565b81600181146117e457600281146117ee5761180a565b60019150506104ad565b60ff8411156117ff576117ff611759565b50506001821b6104ad565b5060208310610133831016604e8410600b841016171561182d575081810a6104ad565b611837838361176f565b806000190482111561184b5761184b611759565b029392505050565b600061107260ff8416836117b2565b634e487b7160e01b600052603260045260246000fd5b600060001982141561188c5761188c611759565b5060010190565b600060ff821660ff84168060ff038211156118b0576118b0611759565b019392505050565b6000828210156118ca576118ca611759565b500390565b6000602082840312156118e157600080fd5b81516110728161150e565b6000602082840312156118fe57600080fd5b81516001600160801b038116811461107257600080fd5b600062ffffff8083168181141561192e5761192e611759565b6001019392505050565b805160ff81168114610d0b57600080fd5b60006020828403121561195b57600080fd5b61107282611938565b634e487b7160e01b600052601260045260246000fd5b60008261198957611989611964565b500490565b60008160001904831182151516156119a8576119a8611759565b500290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600080600080600080600060e0888a031215611a1657600080fd5b8751611a218161150e565b8097505060208801518060020b8114611a3957600080fd5b6040890151909650611a4a8161156f565b6060890151909550611a5b8161156f565b6080890151909450611a6c8161156f565b9250611a7a60a08901611938565b915060c08801518015158114611a8f57600080fd5b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015611af357835163ffffffff1683529284019291840191600101611ad1565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b2857611b28611a9f565b604052919050565b600067ffffffffffffffff821115611b4a57611b4a611a9f565b5060051b60200190565b600082601f830112611b6557600080fd5b81516020611b7a611b7583611b30565b611aff565b82815260059290921b84018101918181019086841115611b9957600080fd5b8286015b84811015611bbd578051611bb08161150e565b8352918301918301611b9d565b509695505050505050565b60008060408385031215611bdb57600080fd5b825167ffffffffffffffff80821115611bf357600080fd5b818501915085601f830112611c0757600080fd5b81516020611c17611b7583611b30565b82815260059290921b84018101918181019089841115611c3657600080fd5b948201945b83861015611c645785518060060b8114611c555760008081fd5b82529482019490820190611c3b565b91880151919650909350505080821115611c7d57600080fd5b50611c8a85828601611b54565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615611cbf57611cbf611759565b81667fffffffffffff018313811615611cda57611cda611759565b5090039392505050565b60008160060b8360060b80611cfb57611cfb611964565b667fffffffffffff19821460001982141615611d1957611d19611759565b90059392505050565b6000600160ff1b821415611d3857611d38611759565b5060000390565b60008160020b627fffff19811415611d5957611d59611759565b60000392915050565b600082611d7157611d71611964565b500690565b60008219821115611d8957611d89611759565b50019056fea26469706673582212200901d5f3dbb890966e86b593ab674c0a9364f0f6216800f02beacd1ae7fa45af64736f6c634300080c0033";

type UniswapV3OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Oracle__factory extends ContractFactory {
  constructor(...args: UniswapV3OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3Oracle> {
    return super.deploy(overrides || {}) as Promise<UniswapV3Oracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapV3Oracle {
    return super.attach(address) as UniswapV3Oracle;
  }
  connect(signer: Signer): UniswapV3Oracle__factory {
    return super.connect(signer) as UniswapV3Oracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3OracleInterface {
    return new utils.Interface(_abi) as UniswapV3OracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Oracle {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Oracle;
  }
}
